{"ast":null,"code":"import * as moment from 'moment';\nimport { map, tap } from 'rxjs/Operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/socket.service\";\nimport * as i2 from \"@angular/common\";\n\nconst _c0 = function (a2, a3, a4) {\n  return [\"item\", \"green\", a2, a3, a4];\n};\n\nfunction AppComponent_ng_container_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_0_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.handleSchedulePicking(i_r4);\n    });\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"horario: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7, \"motos: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const schedule_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(3, _c0, schedule_r3.motos.length < 8 ? \"selected\" : \"meh\", schedule_r3.motos.length === 0 ? \"red\" : \"meh\", ctx_r2.lastclicked === i_r4 ? \"lastclicked\" : \"meh\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", schedule_r3.time, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", schedule_r3.motos.length, \" \");\n  }\n}\n\nfunction AppComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_0_div_2_Template, 9, 7, \"div\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const state_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", state_r1.currentSchedule);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    currentSchedule: a0\n  };\n};\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(socketService) {\n      this.socketService = socketService;\n      this.selected = false;\n      this.lastclicked = null;\n      this.currentSchedule$ = this.socketService.fromEvent('schedule').pipe(tap(result => console.log(result)), map(schedules => schedules.map(schedule => Object.assign(Object.assign({}, schedule), {\n        time: moment.utc(schedule === null || schedule === void 0 ? void 0 : schedule.time).format('HH:mm:ss'),\n        motos: schedule.motos.filter(moto => !moto)\n      }))));\n      this.socketService.sendMessage(null);\n    }\n\n    handleSchedulePicking(id) {\n      console.log(id);\n      this.lastclicked = id;\n      this.socketService.sendMessage({\n        id\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SocketService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 5,\n    consts: [[4, \"ngIf\"], [1, \"container\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_ng_container_0_Template, 3, 1, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction1(3, _c1, i0.ɵɵpipeBind1(1, 1, ctx.currentSchedule$)));\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf, i2.NgClass],\n    pipes: [i2.AsyncPipe],\n    styles: [\".lastclicked[_ngcontent-%COMP%]{border:2px solid #000}.container[_ngcontent-%COMP%]{display:grid;grid-row-gap:16px;grid-column-gap:16px;justify-content:start;width:100%;grid-auto-flow:column;grid-template-rows:repeat(5,1fr);grid-template-columns:repeat(5,1fr)}.item[_ngcontent-%COMP%]{padding:8px;cursor:pointer}.green[_ngcontent-%COMP%]{background-color:green}.selected[_ngcontent-%COMP%]{background-color:blue}.red[_ngcontent-%COMP%]{background-color:red}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}